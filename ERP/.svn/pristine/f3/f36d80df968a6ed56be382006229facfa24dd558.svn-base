package com.ztkj.controller.purchaseController;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageInfo;
import com.ztkj.entity.purchase.Brand;
import com.ztkj.entity.purchase.Detailed;
import com.ztkj.entity.purchase.Firm;
import com.ztkj.entity.purchase.Purchase;
import com.ztkj.entity.purchase.PurchaseVo;
import com.ztkj.entity.purchase.Wares;
import com.ztkj.entity.purchase.Warestype;
import com.ztkj.mapper.purchaseMapper.BrandMapper;
import com.ztkj.service.purchaseService.PurchaseService;

@Controller
@RequestMapping("/purchase/purchase")
public class PurchaseController {
	
	@Resource(name="purchaseService")
	private PurchaseService purchaseService;
	
	@RequestMapping("/queryByPurchase.action")
	@ResponseBody
	public PageInfo<PurchaseVo> queryByPurchase(PurchaseVo purchaseVo){
		PageInfo<PurchaseVo> pageInfo =null;
		try {
			pageInfo = purchaseService.queryByPurchase(purchaseVo);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return pageInfo;
	}
	
	@RequestMapping("/queryByOnePurchase.action")
	@ResponseBody
	public Purchase queryByOnePurchase(String puRealid){
		Purchase onePurchase=null;
		try {
			onePurchase = purchaseService.queryByOnePurchase(puRealid);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return onePurchase;
	}
	
	@RequestMapping("/queryByOneDetailed.action")
	@ResponseBody
	public List<Detailed> queryByOneDetailed(String puRealid){
		List<Detailed> list=null;
		try {
			list = purchaseService.queryByOneDetailed(puRealid);
			System.out.println(list);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}
	
	@RequestMapping("/deletePurchase.action")
	@ResponseBody
	public void deletePurchase(String puRealid){
		try {
			purchaseService.deletePurchase(puRealid);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/queryByAllBrname.action")
	@ResponseBody
	public List<Brand> queryAllBrname(){
		List<Brand> list=new ArrayList<Brand>();
		try {
			list=purchaseService.queryAllBrname();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}
	
	@RequestMapping("/queryMaxId.action")
	@ResponseBody
	public Purchase queryMaxId(){
		Purchase purchase=null;
		try {
			purchase=new Purchase();
			int maxId=purchaseService.queryMaxId()+1;
			purchase.setPuRealid("CG"+purchase.getNewTime()+maxId);
			purchase.setPuTime(new Date());
			purchase.setPuUserid("李明");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return purchase;
	}
	
	@RequestMapping("/queryByAllTypename.action")
	@ResponseBody
	public List<Warestype> queryByAllTypename(){
		List<Warestype> list=new ArrayList<Warestype>();
		try {
			list=purchaseService.queryByAllTypename();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
	@RequestMapping("/queryByAllWaname.action")
	@ResponseBody
	public List<Wares> queryByAllWaname(){
		List<Wares> list=new ArrayList<Wares>();
		try {
			list=purchaseService.queryByAllWaname();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
	@RequestMapping("/queryByAllFiname.action")
	@ResponseBody
	public List<Firm> queryByAllFiname(){
		List<Firm> list=new ArrayList<Firm>();
		try {
			list=purchaseService.queryByAllFiname();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
	
}
